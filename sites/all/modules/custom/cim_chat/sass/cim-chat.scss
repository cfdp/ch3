$green: #80B45A;
$orange: #EBB560;
$blue: #268fb3;

.main {
  margin: 2em;
}
.status-buttons-title {
  margin: 2em 0;
}

.cm-Chat-client {
  right: 0px;
  z-index: 10000;

  .cm-Chat-header-menu-left {
    background-image: image-url('arrow_down.svg'), none;
    background-size: 25px 25px;
    background-repeat: no-repeat;
    display: inline;
    line-height: 1.8;
    margin-left: 10px;
    height: 30px;
    width: 35px;
    cursor: pointer;
  }

  .cm-Chat-header-menu-middle,
  .cm-Chat-header-menu-right {
    display: inline;
    line-height: 1.8;
  }

  .cm-Chat-header {
    background: $blue;
    border-radius: 0;
  }
}

/* Chat iframe */
iframe.cm-Chat-container {
  position: absolute;
  top:50px;
  width: 100%;
  height: calc(100vh - 55px);
  //height: 585px;
}



@media screen and (min-width: 601px) {
  .cm-Chat-client {
    bottom: 600px;
    right: 40px;
    min-width: 350px;
  }
  iframe.cm-Chat-container {
    width: 350px;
    height: 585px
  }
}

.chat-status {
  color: white;
  font-weight: 700;
  font-size: 12px;
  padding: .3em .6em;
  margin-right: 5px;
  border: 1px solid #ccc;
  text-transform: uppercase;
  &[data-chat-status="Ready"] {
    cursor: pointer;
    background-color: $green;
  }
  
  &[data-chat-status="Activ"] {
    background-color: $green;
  }
  
  &[data-chat-status="Busy"],
  &[data-chat-status="Queue"],
  &[data-chat-status="Chatting"] {
    background-color: $orange;
  }
}

/* Wrapper for status iframe */
.iframeWrapper {
  display: none;
}

/* Throbber dot shown when waiting for status */

.cim-dot {
  display: none;
  margin: 0 10px 0 20px;
}
/*!
 * three-dots - v0.1.2
 * CSS loading animation made by single element.
 * https://github.com/nzbin/three-dots#readme
 *
 * Copyright (c) 2018 nzbin
 * Released under MIT License
 */

 /**
 * ==============================================
 * Dot Flashing
 * ==============================================
 */

// ==============================================
// Variables
// ==============================================

$dotWidth: 8px;
$dotHeight: 8px;
$dotRadius: $dotWidth/2;

$dotColor:#ccc;
$dotBgColor: $dotColor;
$dotBeforeColor: $dotColor;
$dotAfterColor: $dotColor;

$dotSpacing: $dotWidth + $dotWidth/2;

// ==============================================
// Mixins
// ==============================================

@mixin dot($width: $dotWidth, $height: $dotHeight, $radius: $dotRadius,$bgColor: $dotBgColor, $color: $dotColor ) {
  width: $width;
  height: $height;
  border-radius: $radius;
  background-color: $bgColor;
  color: $color;
  // Added by gv
  //display: inline-block;
  //margin-left: 25px;
}

 .dot-flashing {
  position: relative;

  @include dot;

  animation: dotFlashing 1s infinite linear alternate;
  animation-delay: .5s;

  &::before,
  &::after {
    content: '';
    display: inline-block;
    position: absolute;
    top: 0;
  }

  &::before {
    left: - $dotSpacing;

    @include dot($bgColor: $dotBeforeColor);

    animation: dotFlashing 1s infinite alternate;
    animation-delay: 0s;
  }

  &::after {
    left: $dotSpacing;

    @include dot($bgColor: $dotAfterColor);

    animation: dotFlashing 1s infinite alternate;
    animation-delay: 1s;
  }
}

@keyframes dotFlashing {
  0% {
    background-color: $dotColor;
  }

  50%,
  100% {
    background-color: lighten($dotColor, 20%);
  }
}