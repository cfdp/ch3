<?php


/*
 * Implementation of hook_form_alter()
 */
function cfdp_uf_form_alter(&$form, &$form_state, $form_id){
  switch ($form_id) {
  case 'brevkasse_node_form':
    // Brevkasse-status: Iterate over the terms and unset any closed or archived terms from the select list
    $brevk_terms = taxonomy_term_load_multiple(array(), array('vid' => '3'));
    foreach ($brevk_terms as $key => $value) {
        if (count($value->field_taxonomy_brevk_status) > 0){
          $status = $value->field_taxonomy_brevk_status['und']['0']['value'];
          if ($status === "archived" || $status === "temp_closed") {
            $tid = $value ->tid;
            unset($form['field_brevk_kategori']['und']['#options'][$tid]);
          }
        }
    }
    break;
  }
}

function cfdp_uf_node_update($node) {
  global $user;
  //if it is the first time the brevkasse node is edited by a counselor (=the author is anonymous), change the author to the current user
  if (($node->uid == 0) && ($node->type == "brevkasse") && cfdp_uf_user_has_role('BrevkasserÃ¥dgiver')) {
    $node->uid = $user->uid;
    node_save($node);
    drupal_set_message(t('Author of Brevkasse node changed from anonymous to ').$user->name);
  }
}

/**
* Check to see if a user has been assigned a certain role.
*
* @param $role
*   The name of the role you're trying to find.
* @param $user
*   The user object for the user you're checking; defaults to the current user.
* @return
*   TRUE if the user object has the role, FALSE if it does not.
*/
function cfdp_uf_user_has_role($role, $user = NULL) {
  if ($user == NULL) {
    global $user;
  }
  if (is_array($user->roles) && in_array($role, array_values($user->roles))) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Check if the current time is within opening hours
 * @return
 *   TRUE if the current time is within opening hours
 * @todo opening hours should be configurable fields in the administration
 */
function cfdp_uf_open_to_posts() {
  $open = true;
  $closingtime = 22;
  $openingtime = 9;
  $timezone = new DateTimeZone( "Europe/Copenhagen" );
  $date = new DateTime();
  $date->setTimezone($timezone);
  $present_hour =  $date->format('H');
  if($present_hour > ($closingtime -1) || $present_hour < $openingtime ){
    $open = false;
  }
  return $open;
}
